・履歴一覧から新規登録がエラーになる
・モーダルが見切れる
・ホームボタンがボトムナビで隠れる
・戻るボタンで戻る挙動をしたい。今はアプリが閉じる






1. GitHub管理・公開準備
 プロジェクト一式をGitHubリポジトリにプッシュ

 .gitignore（DBファイルや.env、シークレットは除外）

 README.mdにアプリ概要・使い方・環境・デモ画像をまとめる

 CHANGELOG.mdや“更新履歴”を作成

 LICENSEファイルでライセンス明記

2. デモ用環境＆テストデータ整備
 サンプルDBやCSVを（実データと分けて）添付

 公開・配布用バージョンは「個人情報が入っていない」ことを最終確認

3. スマホ・PC両対応の実機チェック
 iPhone／Android実機での表示・操作感確認

 スマホ画面サイズでフォームやテーブルのレイアウト崩れがないかテスト

 PC版もF12デベロッパーツールでサイズ可変表示チェック

4. ユーザー目線での“分かりやすさ”最終確認
 初回起動からの登録フローで詰まりポイントがないか確認

 エラーメッセージや未入力時のガイド表示を見直す

 必要なら“ヘルプ”“使い方”ページも追加

 FAQを簡単にまとめてREADMEやアプリ内に設置

5. データ安全性・バックアップ案内
 データベースのバックアップ方法をREADMEや画面内で案内

 大量データ（テスト用）で動作が重くならないか確認

6. エラーハンドリングとユーザー体験向上
 入力エラー時の優しい説明文（例：ポップアップ、下部表示）

 404や500等エラー時のカスタム画面（余力があれば）

7. レビュー導線・フィードバック受付体制
 テスト公開URLを用意（Render等でOK）

 フィードバック用Googleフォームやメールリンク設置

 GitHubリポジトリのIssue機能も“ご意見箱”として案内

8. 権利表記・素材利用の明記
 使用画像やフォント、アイコンの出典明記

 LICENSEファイルの明示（MIT, Apache, 個人利用など）

9. （余力があれば）テストコード・自動化体験
 最低限のpytest等で動作確認スクリプトを用意

 将来的なCI/CDや自動テストも意識だけ

10. 今後のロードマップ整理
 READMEやNotionなどで「次に追加したい機能リスト」を整理

 ユーザーや自分の声から“成長TODO”を追加しておく

11. ガワネイティブ化・ストア公開準備
 WebViewアプリ（ガワネイティブ）化

Android Studio＋Kotlin（またはJava）でWebViewラッパーアプリを作成

アプリ名・アイコン・スプラッシュ画面・パーミッションの設定

URLは本番Webアプリに直リンク

 Playストア公開向けの準備

アプリのパッケージ名・バージョン名・バージョンコード設定

アプリ署名（keystore）を作成・管理

ストア用スクリーンショット/アイコン/説明文（日本語＆英語）

プライバシーポリシーURLを用意

「動作確認機種」「Androidバージョン」表記

Google Play Consoleでアプリ新規作成・リリース登録

公開前チェックリスト（ポリシー違反や権利侵害の回避）

 （余力があれば）iOS向けも視野に：

Capacitor/Cordova/Expo/React Native/Flutter等でマルチプラットフォーム展開を検討



